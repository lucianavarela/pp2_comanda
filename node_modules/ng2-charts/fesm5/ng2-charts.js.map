{"version":3,"file":"ng2-charts.js.map","sources":["ng://ng2-charts/lib/default-colors.ts","ng://ng2-charts/lib/get-colors.ts","ng://ng2-charts/lib/theme.service.ts","ng://ng2-charts/lib/base-chart.directive.ts","ng://ng2-charts/lib/charts.module.ts","ng://ng2-charts/lib/monkey-patch-chart-js-legend.ts","ng://ng2-charts/lib/monkey-patch-chart-js-tooltip.ts"],"sourcesContent":["export const defaultColors: Array<number[]> = [\r\n  [255, 99, 132],\r\n  [54, 162, 235],\r\n  [255, 206, 86],\r\n  [231, 233, 237],\r\n  [75, 192, 192],\r\n  [151, 187, 205],\r\n  [220, 220, 220],\r\n  [247, 70, 74],\r\n  [70, 191, 189],\r\n  [253, 180, 92],\r\n  [148, 159, 177],\r\n  [77, 83, 96]\r\n];\r\n","import { Color } from './color';\r\nimport { Colors } from './colors';\r\nimport { defaultColors } from './default-colors';\r\n\r\n/**\r\n * Generate colors by chart type\r\n */\r\nexport function getColors(chartType: string, index: number, count: number): Color {\r\n  if (chartType === 'pie' || chartType === 'doughnut') {\r\n    return formatPieColors(generateColors(count));\r\n  }\r\n\r\n  if (chartType === 'polarArea') {\r\n    return formatPolarAreaColors(generateColors(count));\r\n  }\r\n\r\n  if (chartType === 'line' || chartType === 'radar') {\r\n    return formatLineColor(generateColor(index));\r\n  }\r\n\r\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\r\n    return formatBarColor(generateColor(index));\r\n  }\r\n\r\n  if (chartType === 'bubble') {\r\n    return formatPieColors(generateColors(count));\r\n  }\r\n\r\n  if (chartType === 'scatter') {\r\n    return formatPieColors(generateColors(count));\r\n  }\r\n\r\n  throw new Error(`getColors - Unsupported chart type ${chartType}`);\r\n}\r\n\r\nfunction rgba(colour: Array<number>, alpha: number): string {\r\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\r\n}\r\n\r\nfunction getRandomInt(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction formatLineColor(colors: Array<number>): Color {\r\n  return {\r\n    backgroundColor: rgba(colors, 0.4),\r\n    borderColor: rgba(colors, 1),\r\n    pointBackgroundColor: rgba(colors, 1),\r\n    pointBorderColor: '#fff',\r\n    pointHoverBackgroundColor: '#fff',\r\n    pointHoverBorderColor: rgba(colors, 0.8)\r\n  };\r\n}\r\n\r\nfunction formatBarColor(colors: Array<number>): Color {\r\n  return {\r\n    backgroundColor: rgba(colors, 0.6),\r\n    borderColor: rgba(colors, 1),\r\n    hoverBackgroundColor: rgba(colors, 0.8),\r\n    hoverBorderColor: rgba(colors, 1)\r\n  };\r\n}\r\n\r\nfunction formatPieColors(colors: Array<number[]>): Colors {\r\n  return {\r\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\r\n    borderColor: colors.map(() => '#fff'),\r\n    pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\r\n    pointBorderColor: colors.map(() => '#fff'),\r\n    pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\r\n    pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\r\n  };\r\n}\r\n\r\nfunction formatPolarAreaColors(colors: Array<number[]>): Color {\r\n  return {\r\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\r\n    borderColor: colors.map((color: number[]) => rgba(color, 1)),\r\n    hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 0.8)),\r\n    hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\r\n  };\r\n}\r\n\r\nfunction getRandomColor(): number[] {\r\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\r\n}\r\n\r\n/**\r\n * Generate colors for line|bar charts\r\n */\r\nfunction generateColor(index: number): number[] {\r\n  return defaultColors[index] || getRandomColor();\r\n}\r\n\r\n/**\r\n * Generate colors for pie|doughnut charts\r\n */\r\nfunction generateColors(count: number): Array<number[]> {\r\n  const colorsArr: Array<number[]> = new Array(count);\r\n  for (let i = 0; i < count; i++) {\r\n    colorsArr[i] = defaultColors[i] || getRandomColor();\r\n  }\r\n  return colorsArr;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ChartOptions } from 'chart.js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  private pColorschemesOptions: ChartOptions = {};\r\n  public colorschemesOptions = new BehaviorSubject<ChartOptions>({});\r\n\r\n  constructor() { }\r\n\r\n  setColorschemesOptions(options: ChartOptions) {\r\n    this.pColorschemesOptions = options;\r\n    this.colorschemesOptions.next(options);\r\n  }\r\n\r\n  getColorschemesOptions() {\r\n    return this.pColorschemesOptions;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  OnDestroy,\r\n  OnChanges,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  DoCheck,\r\n} from '@angular/core';\r\nimport * as chartJs from 'chart.js';\r\nimport { getColors } from './get-colors';\r\nimport { Color } from './color';\r\nimport { ThemeService } from './theme.service';\r\nimport { Subscription } from 'rxjs';\r\nimport * as _ from 'lodash';\r\n\r\nexport type SingleDataSet = (number[] | chartJs.ChartPoint[]);\r\nexport type MultiDataSet = (number[] | chartJs.ChartPoint[])[];\r\nexport type SingleOrMultiDataSet = SingleDataSet | MultiDataSet;\r\n\r\nexport type PluginServiceGlobalRegistrationAndOptions = chartJs.PluginServiceGlobalRegistration & chartJs.PluginServiceRegistrationOptions;\r\nexport type SingleLineLabel = string;\r\nexport type MultiLineLabel = string[];\r\nexport type Label = SingleLineLabel | MultiLineLabel;\r\n\r\ninterface OldState {\r\n  dataExists: boolean;\r\n  dataLength: number;\r\n  datasetsExists: boolean;\r\n  datasetsLength: number;\r\n  datasetsDataObjects: any[];\r\n  datasetsDataLengths: number[];\r\n  colorsExists: boolean;\r\n  colors: Color[];\r\n  labelsExist: boolean;\r\n  labels: Label[];\r\n  legendExists: boolean;\r\n  legend: {\r\n    position?: string;\r\n  };\r\n}\r\n\r\nenum UpdateType {\r\n  Default,\r\n  Update,\r\n  Refresh\r\n}\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'canvas[baseChart]',\r\n  exportAs: 'base-chart'\r\n})\r\nexport class BaseChartDirective implements OnDestroy, OnChanges, OnInit, OnDestroy, DoCheck {\r\n  @Input() public data: SingleOrMultiDataSet;\r\n  @Input() public datasets: chartJs.ChartDataSets[];\r\n  @Input() public labels: Label[];\r\n  @Input() public options: chartJs.ChartOptions = {};\r\n  @Input() public chartType: chartJs.ChartType;\r\n  @Input() public colors: Color[];\r\n  @Input() public legend: boolean;\r\n  @Input() public plugins: PluginServiceGlobalRegistrationAndOptions[];\r\n\r\n  @Output() public chartClick: EventEmitter<{ event?: MouseEvent, active?: {}[] }> = new EventEmitter();\r\n  @Output() public chartHover: EventEmitter<{ event: MouseEvent, active: {}[] }> = new EventEmitter();\r\n\r\n  public ctx: string;\r\n  public chart: Chart;\r\n\r\n  private old: OldState = {\r\n    dataExists: false,\r\n    dataLength: 0,\r\n    datasetsExists: false,\r\n    datasetsLength: 0,\r\n    datasetsDataObjects: [],\r\n    datasetsDataLengths: [],\r\n    colorsExists: false,\r\n    colors: [],\r\n    labelsExist: false,\r\n    labels: [],\r\n    legendExists: false,\r\n    legend: {},\r\n  };\r\n\r\n  private subs: Subscription[] = [];\r\n\r\n  /**\r\n   * Register a plugin.\r\n   */\r\n  public static registerPlugin(plugin: PluginServiceGlobalRegistrationAndOptions) {\r\n    chartJs.Chart.plugins.register(plugin);\r\n  }\r\n\r\n  public static unregisterPlugin(plugin: PluginServiceGlobalRegistrationAndOptions) {\r\n    chartJs.Chart.plugins.unregister(plugin);\r\n  }\r\n\r\n  public constructor(\r\n    private element: ElementRef,\r\n    private themeService: ThemeService,\r\n  ) { }\r\n\r\n  public ngOnInit() {\r\n    this.ctx = this.element.nativeElement.getContext('2d');\r\n    this.refresh();\r\n    this.subs.push(this.themeService.colorschemesOptions.subscribe(r => this.themeChanged(r)));\r\n  }\r\n\r\n  private themeChanged(options: {}) {\r\n    this.refresh();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    if (!this.chart) {\r\n      return;\r\n    }\r\n    let updateRequired = UpdateType.Default;\r\n    const wantUpdate = (x: UpdateType) => {\r\n      updateRequired = x > updateRequired ? x : updateRequired;\r\n    };\r\n\r\n    if (!!this.data !== this.old.dataExists) {\r\n      this.propagateDataToDatasets(this.data);\r\n\r\n      this.old.dataExists = !!this.data;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.data && this.data.length !== this.old.dataLength) {\r\n      this.old.dataLength = this.data && this.data.length || 0;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (!!this.datasets !== this.old.datasetsExists) {\r\n      this.old.datasetsExists = !!this.datasets;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\r\n      this.old.datasetsLength = this.datasets && this.datasets.length || 0;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.datasets && this.datasets.filter((x, i) => x.data !== this.old.datasetsDataObjects[i]).length) {\r\n      this.old.datasetsDataObjects = this.datasets.map(x => x.data);\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.datasets && this.datasets.filter((x, i) => x.data.length !== this.old.datasetsDataLengths[i]).length) {\r\n      this.old.datasetsDataLengths = this.datasets.map(x => x.data.length);\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (!!this.colors !== this.old.colorsExists) {\r\n      this.old.colorsExists = !!this.colors;\r\n\r\n      this.updateColors();\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    // This smells of inefficiency, might need to revisit this\r\n    if (this.colors && this.colors.filter((x, i) => !this.colorsEqual(x, this.old.colors[i])).length) {\r\n      this.old.colors = this.colors.map(x => this.copyColor(x));\r\n\r\n      this.updateColors();\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (!!this.labels !== this.old.labelsExist) {\r\n      this.old.labelsExist = !!this.labels;\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (this.labels && this.labels.filter((x, i) => !this.labelsEqual(x, this.old.labels[i])).length) {\r\n      this.old.labels = this.labels.map(x => this.copyLabel(x));\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (!!this.options.legend !== this.old.legendExists) {\r\n      this.old.legendExists = !!this.options.legend;\r\n\r\n      wantUpdate(UpdateType.Refresh);\r\n    }\r\n\r\n    if (this.options.legend && this.options.legend.position !== this.old.legend.position) {\r\n      this.old.legend.position = this.options.legend.position;\r\n\r\n      wantUpdate(UpdateType.Refresh);\r\n    }\r\n\r\n    switch (updateRequired as UpdateType) {\r\n      case UpdateType.Default:\r\n        break;\r\n      case UpdateType.Update:\r\n        this.update();\r\n        break;\r\n      case UpdateType.Refresh:\r\n        this.refresh();\r\n        break;\r\n    }\r\n  }\r\n\r\n  copyLabel(a: Label): Label {\r\n    if (Array.isArray(a)) {\r\n      return [...a];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  labelsEqual(a: Label, b: Label) {\r\n    return true\r\n      && Array.isArray(a) === Array.isArray(b)\r\n      && (Array.isArray(a) || a === b)\r\n      && (!Array.isArray(a) || a.length === b.length)\r\n      && (!Array.isArray(a) || a.filter((x, i) => x !== b[i]).length === 0)\r\n      ;\r\n  }\r\n\r\n  copyColor(a: Color): Color {\r\n    const rc: Color = {\r\n      backgroundColor: a.backgroundColor,\r\n      borderWidth: a.borderWidth,\r\n      borderColor: a.borderColor,\r\n      borderCapStyle: a.borderCapStyle,\r\n      borderDash: a.borderDash,\r\n      borderDashOffset: a.borderDashOffset,\r\n      borderJoinStyle: a.borderJoinStyle,\r\n      pointBorderColor: a.pointBorderColor,\r\n      pointBackgroundColor: a.pointBackgroundColor,\r\n      pointBorderWidth: a.pointBorderWidth,\r\n      pointRadius: a.pointRadius,\r\n      pointHoverRadius: a.pointHoverRadius,\r\n      pointHitRadius: a.pointHitRadius,\r\n      pointHoverBackgroundColor: a.pointHoverBackgroundColor,\r\n      pointHoverBorderColor: a.pointHoverBorderColor,\r\n      pointHoverBorderWidth: a.pointHoverBorderWidth,\r\n      pointStyle: a.pointStyle,\r\n      hoverBackgroundColor: a.hoverBackgroundColor,\r\n      hoverBorderColor: a.hoverBorderColor,\r\n      hoverBorderWidth: a.hoverBorderWidth,\r\n    };\r\n\r\n    return rc;\r\n  }\r\n\r\n  colorsEqual(a: Color, b: Color) {\r\n    if (!a !== !b) {\r\n      return false;\r\n    }\r\n    return !a || true\r\n      && (a.backgroundColor === b.backgroundColor)\r\n      && (a.borderWidth === b.borderWidth)\r\n      && (a.borderColor === b.borderColor)\r\n      && (a.borderCapStyle === b.borderCapStyle)\r\n      && (a.borderDash === b.borderDash)\r\n      && (a.borderDashOffset === b.borderDashOffset)\r\n      && (a.borderJoinStyle === b.borderJoinStyle)\r\n      && (a.pointBorderColor === b.pointBorderColor)\r\n      && (a.pointBackgroundColor === b.pointBackgroundColor)\r\n      && (a.pointBorderWidth === b.pointBorderWidth)\r\n      && (a.pointRadius === b.pointRadius)\r\n      && (a.pointHoverRadius === b.pointHoverRadius)\r\n      && (a.pointHitRadius === b.pointHitRadius)\r\n      && (a.pointHoverBackgroundColor === b.pointHoverBackgroundColor)\r\n      && (a.pointHoverBorderColor === b.pointHoverBorderColor)\r\n      && (a.pointHoverBorderWidth === b.pointHoverBorderWidth)\r\n      && (a.pointStyle === b.pointStyle)\r\n      && (a.hoverBackgroundColor === b.hoverBackgroundColor)\r\n      && (a.hoverBorderColor === b.hoverBorderColor)\r\n      && (a.hoverBorderWidth === b.hoverBorderWidth)\r\n      ;\r\n  }\r\n\r\n  updateColors() {\r\n    this.datasets.forEach((elm, index) => {\r\n      if (this.colors && this.colors[index]) {\r\n        Object.assign(elm, this.colors[index]);\r\n      } else {\r\n        Object.assign(elm, getColors(this.chartType, index, elm.data.length), { ...elm });\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges) {\r\n    let updateRequired = UpdateType.Default;\r\n    const wantUpdate = (x: UpdateType) => {\r\n      updateRequired = x > updateRequired ? x : updateRequired;\r\n    };\r\n\r\n    // Check if the changes are in the data or datasets or labels or legend\r\n\r\n    if (changes.hasOwnProperty('data') && changes.data.currentValue) {\r\n      this.propagateDataToDatasets(changes.data.currentValue);\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\r\n      this.propagateDatasetsToData(changes.datasets.currentValue);\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('labels')) {\r\n      if (this.chart) {\r\n        this.chart.data.labels = changes.labels.currentValue;\r\n      }\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('legend')) {\r\n      if (this.chart) {\r\n        this.chart.config.options.legend.display = changes.legend.currentValue;\r\n        this.chart.generateLegend();\r\n      }\r\n\r\n      wantUpdate(UpdateType.Update);\r\n    }\r\n\r\n    if (changes.hasOwnProperty('options')) {\r\n      wantUpdate(UpdateType.Refresh);\r\n    }\r\n\r\n    switch (updateRequired as UpdateType) {\r\n      case UpdateType.Update:\r\n        this.update();\r\n        break;\r\n      case UpdateType.Refresh:\r\n      case UpdateType.Default:\r\n        this.refresh();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n      this.chart = void 0;\r\n    }\r\n    this.subs.forEach(x => x.unsubscribe());\r\n  }\r\n\r\n  public update(duration?: any, lazy?: any) {\r\n    if (this.chart) {\r\n      return this.chart.update(duration, lazy);\r\n    }\r\n  }\r\n\r\n  public hideDataset(index: number, hidden: boolean) {\r\n    this.chart.getDatasetMeta(index).hidden = hidden;\r\n    this.chart.update();\r\n  }\r\n\r\n  public isDatasetHidden(index: number): boolean {\r\n    return this.chart.getDatasetMeta(index).hidden;\r\n  }\r\n\r\n  public toBase64Image(): string {\r\n    return this.chart.toBase64Image();\r\n  }\r\n\r\n  public getChartConfiguration(): chartJs.ChartConfiguration {\r\n    const datasets = this.getDatasets();\r\n\r\n    const options = Object.assign({}, this.options);\r\n    if (this.legend === false) {\r\n      options.legend = { display: false };\r\n    }\r\n    // hook for onHover and onClick events\r\n    options.hover = options.hover || {};\r\n    if (!options.hover.onHover) {\r\n      options.hover.onHover = (event: MouseEvent, active: {}[]) => {\r\n        if (active && !active.length) {\r\n          return;\r\n        }\r\n        this.chartHover.emit({ event, active });\r\n      };\r\n    }\r\n\r\n    if (!options.onClick) {\r\n      options.onClick = (event?: MouseEvent, active?: {}[]) => {\r\n        this.chartClick.emit({ event, active });\r\n      };\r\n    }\r\n\r\n    const mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\r\n\r\n    const chartConfig: chartJs.ChartConfiguration = {\r\n      type: this.chartType,\r\n      data: {\r\n        labels: this.labels || [],\r\n        datasets\r\n      },\r\n      plugins: this.plugins,\r\n      options: mergedOptions,\r\n    };\r\n\r\n    return chartConfig;\r\n  }\r\n\r\n  public getChartBuilder(ctx: string/*, data:any[], options:any*/): Chart {\r\n    const chartConfig = this.getChartConfiguration();\r\n    return new chartJs.Chart(ctx, chartConfig);\r\n  }\r\n\r\n  smartMerge(options: any, overrides: any, level: number = 0): any {\r\n    if (level === 0) {\r\n      options = _.cloneDeep(options);\r\n    }\r\n    const keysToUpdate = Object.keys(overrides);\r\n    keysToUpdate.forEach(key => {\r\n      if (Array.isArray(overrides[key])) {\r\n        const arrayElements = options[key];\r\n        if (arrayElements) {\r\n          arrayElements.forEach(r => {\r\n            this.smartMerge(r, overrides[key][0], level + 1);\r\n          });\r\n        }\r\n      } else if (typeof (overrides[key]) === 'object') {\r\n        if (!(key in options)) {\r\n          options[key] = {};\r\n        }\r\n        this.smartMerge(options[key], overrides[key], level + 1);\r\n      } else {\r\n        options[key] = overrides[key];\r\n      }\r\n    });\r\n    if (level === 0) {\r\n      return options;\r\n    }\r\n  }\r\n\r\n  private isMultiLineLabel(label: Label): label is MultiLineLabel {\r\n    return Array.isArray(label);\r\n  }\r\n\r\n  private joinLabel(label: Label): string {\r\n    if (!label) {\r\n      return null;\r\n    }\r\n    if (this.isMultiLineLabel(label)) {\r\n      return label.join(' ');\r\n    } else {\r\n      return label;\r\n    }\r\n  }\r\n\r\n  private propagateDatasetsToData(datasets: chartJs.ChartDataSets[]) {\r\n    this.data = this.datasets.map(r => r.data);\r\n    if (this.chart) {\r\n      this.chart.data.datasets = datasets;\r\n    }\r\n    this.updateColors();\r\n  }\r\n\r\n  private propagateDataToDatasets(newDataValues: SingleOrMultiDataSet): void {\r\n    if (this.isMultiDataSet(newDataValues)) {\r\n      if (this.datasets && newDataValues.length === this.datasets.length) {\r\n        this.datasets.forEach((dataset, i: number) => {\r\n          dataset.data = newDataValues[i];\r\n        });\r\n      } else {\r\n        this.datasets = newDataValues.map((data: number[], index: number) => {\r\n          return { data, label: this.joinLabel(this.labels[index]) || `Label ${index}` };\r\n        });\r\n        if (this.chart) {\r\n          this.chart.data.datasets = this.datasets;\r\n        }\r\n      }\r\n    } else {\r\n      if (!this.datasets) {\r\n        this.datasets = [{ data: newDataValues }];\r\n        if (this.chart) {\r\n          this.chart.data.datasets = this.datasets;\r\n        }\r\n      } else {\r\n        this.datasets[0].data = newDataValues;\r\n        this.datasets.splice(1); // Remove all elements but the first\r\n      }\r\n    }\r\n    this.updateColors();\r\n  }\r\n\r\n  private isMultiDataSet(data: SingleOrMultiDataSet): data is MultiDataSet {\r\n    return Array.isArray(data[0]);\r\n  }\r\n\r\n  private getDatasets() {\r\n    if (!this.datasets && !this.data) {\r\n      throw new Error(`ng-charts configuration error, data or datasets field are required to render chart ${this.chartType}`);\r\n    }\r\n\r\n    // If `datasets` is defined, use it over the `data` property.\r\n    if (this.datasets) {\r\n      this.propagateDatasetsToData(this.datasets);\r\n      return this.datasets;\r\n    }\r\n\r\n    if (this.data) {\r\n      this.propagateDataToDatasets(this.data);\r\n      return this.datasets;\r\n    }\r\n  }\r\n\r\n  private refresh() {\r\n    // if (this.options && this.options.responsive) {\r\n    //   setTimeout(() => this.refresh(), 50);\r\n    // }\r\n\r\n    // todo: remove this line, it is producing flickering\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n      this.chart = void 0;\r\n    }\r\n    if (this.ctx) {\r\n      this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BaseChartDirective } from './base-chart.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BaseChartDirective\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    BaseChartDirective\r\n  ]\r\n})\r\nexport class ChartsModule { }\r\n","// tslint:disable:variable-name\r\n// tslint:disable:no-var-keyword\r\n// tslint:disable:prefer-const\r\n// tslint:disable:only-arrow-functions\r\n// tslint:disable:one-variable-per-declaration\r\n// tslint:disable:object-literal-shorthand\r\n// tslint:disable:space-before-function-paren\r\n\r\ndeclare class Chart {\r\n  static readonly Chart: typeof Chart;\r\n  static readonly Tooltip: any;\r\n  static readonly helpers: any;\r\n  static readonly defaults: any;\r\n  static readonly plugins: any;\r\n}\r\n\r\nconst helpers = Chart.helpers;\r\nconst defaults = Chart.defaults;\r\nconst valueOrDefault = helpers.valueOrDefault;\r\n\r\nfunction getBoxWidth(labelOpts, fontSize) {\r\n  return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\r\n    fontSize :\r\n    labelOpts.boxWidth;\r\n}\r\n\r\nfunction fit() {\r\n  var me = this;\r\n  var opts = me.options;\r\n  var labelOpts = opts.labels;\r\n  var display = opts.display;\r\n\r\n  var ctx = me.ctx;\r\n\r\n  var labelFont = helpers.options._parseFont(labelOpts);\r\n  var fontSize = labelFont.size;\r\n\r\n  // Reset hit boxes\r\n  var hitboxes = me.legendHitBoxes = [];\r\n\r\n  var minSize = me.minSize;\r\n  var isHorizontal = me.isHorizontal();\r\n\r\n  if (isHorizontal) {\r\n    minSize.width = me.maxWidth; // fill all the width\r\n    minSize.height = display ? 10 : 0;\r\n  } else {\r\n    minSize.width = display ? 10 : 0;\r\n    minSize.height = me.maxHeight; // fill all the height\r\n  }\r\n\r\n  var getMaxLineWidth = function (textLines) {\r\n    return textLines.map(function (textLine) {\r\n      return ctx.measureText(textLine).width;\r\n    }).reduce(function (acc, v) {\r\n      return v > acc ? v : acc;\r\n    }, 0);\r\n  };\r\n\r\n  // Increase sizes here\r\n  if (display) {\r\n    ctx.font = labelFont.string;\r\n\r\n    if (isHorizontal) {\r\n\r\n      // Labels\r\n\r\n      // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n      var lineWidths = me.lineWidths = [0];\r\n      var lineHeights = me.lineHeights = [];\r\n      var currentLineHeight = 0;\r\n      var lineIndex = 0;\r\n\r\n      ctx.textAlign = 'left';\r\n      ctx.textBaseline = 'top';\r\n\r\n      helpers.each(me.legendItems, function (legendItem, i) {\r\n        var width, height;\r\n\r\n        if (helpers.isArray(legendItem.text)) {\r\n          width = getMaxLineWidth(legendItem.text);\r\n          height = fontSize * legendItem.text.length + labelOpts.padding;\r\n        } else {\r\n          width = ctx.measureText(legendItem.text).width;\r\n          height = fontSize + labelOpts.padding;\r\n        }\r\n        width += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\r\n\r\n        if (lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {\r\n          lineHeights.push(currentLineHeight);\r\n          currentLineHeight = 0;\r\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\r\n          lineIndex++;\r\n        }\r\n\r\n        legendItem.lineOrColumnIndex = lineIndex;\r\n\r\n        if (height > currentLineHeight) {\r\n          currentLineHeight = height;\r\n        }\r\n\r\n        // Store the hitbox width and height here. Final position will be updated in `draw`\r\n        hitboxes[i] = {\r\n          left: 0,\r\n          top: 0,\r\n          width: width,\r\n          height: height,\r\n        };\r\n\r\n        lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n      });\r\n\r\n      lineHeights.push(currentLineHeight);\r\n      minSize.height += lineHeights.reduce(function (acc, v) {\r\n        return acc + v;\r\n      }, 0);\r\n\r\n    } else {\r\n      var vPadding = labelOpts.padding;\r\n      var columnWidths = me.columnWidths = [];\r\n      var columnHeights = me.columnHeights = [];\r\n      var totalWidth = labelOpts.padding;\r\n      var currentColWidth = 0;\r\n      var currentColHeight = 0;\r\n      var columnIndex = 0;\r\n\r\n      helpers.each(me.legendItems, function (legendItem, i) {\r\n        var itemWidth;\r\n        var height;\r\n\r\n        if (helpers.isArray(legendItem.text)) {\r\n          itemWidth = getMaxLineWidth(legendItem.text);\r\n          height = fontSize * legendItem.text.length;\r\n        } else {\r\n          itemWidth = ctx.measureText(legendItem.text).width;\r\n          height = fontSize;\r\n        }\r\n        itemWidth += getBoxWidth(labelOpts, fontSize) + (fontSize / 2);\r\n\r\n        // If too tall, go to new column\r\n        if (currentColHeight + fontSize + 2 * vPadding > minSize.height) {\r\n          totalWidth += currentColWidth + labelOpts.padding;\r\n          columnWidths.push(currentColWidth); // previous column width\r\n          columnHeights.push(currentColHeight);\r\n          currentColWidth = 0;\r\n          currentColHeight = 0;\r\n          columnIndex++;\r\n        }\r\n\r\n        legendItem.lineOrColumnIndex = columnIndex;\r\n\r\n        // Get max width\r\n        currentColWidth = Math.max(currentColWidth, itemWidth);\r\n        currentColHeight += height + vPadding;\r\n\r\n        // Store the hitbox width and height here. Final position will be updated in `draw`\r\n        hitboxes[i] = {\r\n          left: 0,\r\n          top: 0,\r\n          width: itemWidth,\r\n          height: height\r\n        };\r\n      });\r\n\r\n      totalWidth += currentColWidth;\r\n      columnWidths.push(currentColWidth);\r\n      columnHeights.push(currentColHeight);\r\n      minSize.width += totalWidth;\r\n    }\r\n  }\r\n\r\n  me.width = minSize.width;\r\n  me.height = minSize.height;\r\n}\r\n\r\nfunction draw() {\r\n  var me = this;\r\n  var opts = me.options;\r\n  var labelOpts = opts.labels;\r\n  var globalDefaults = defaults.global;\r\n  var defaultColor = globalDefaults.defaultColor;\r\n  var lineDefault = globalDefaults.elements.line;\r\n  var legendHeight = me.height;\r\n  var columnHeights = me.columnHeights;\r\n  var columnWidths = me.columnWidths;\r\n  var legendWidth = me.width;\r\n  var lineWidths = me.lineWidths;\r\n  var lineHeights = me.lineHeights;\r\n\r\n  if (opts.display) {\r\n    var ctx = me.ctx;\r\n    var fontColor = valueOrDefault(labelOpts.fontColor, globalDefaults.defaultFontColor);\r\n    var labelFont = helpers.options._parseFont(labelOpts);\r\n    var fontSize = labelFont.size;\r\n    var cursor;\r\n\r\n    // Canvas setup\r\n    ctx.textAlign = 'left';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.strokeStyle = fontColor; // for strikethrough effect\r\n    ctx.fillStyle = fontColor; // render in correct colour\r\n    ctx.font = labelFont.string;\r\n\r\n    var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n    var hitboxes = me.legendHitBoxes;\r\n\r\n    // current position\r\n    var drawLegendBox = function (x, y, legendItem) {\r\n      if (isNaN(boxWidth) || boxWidth <= 0) {\r\n        return;\r\n      }\r\n\r\n      // Set the ctx for the box\r\n      ctx.save();\r\n\r\n      var lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\r\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\r\n\r\n      if (ctx.setLineDash) {\r\n        // IE 9 and 10 do not support line dash\r\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n      }\r\n\r\n      if (opts.labels && opts.labels.usePointStyle) {\r\n        // Recalculate x and y for drawPoint() because its expecting\r\n        // x and y to be center of figure (instead of top left)\r\n        var radius = boxWidth * Math.SQRT2 / 2;\r\n        var centerX = x + boxWidth / 2;\r\n        var centerY = y + fontSize / 2;\r\n\r\n        // Draw pointStyle as legend symbol\r\n        helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n      } else {\r\n        // Draw box as legend symbol\r\n        if (lineWidth !== 0) {\r\n          ctx.strokeRect(x, y, boxWidth, fontSize);\r\n        }\r\n        ctx.fillRect(x, y, boxWidth, fontSize);\r\n      }\r\n\r\n      ctx.restore();\r\n    };\r\n\r\n    var drawStrikeThrough = function (x, y, w) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x + w, y);\r\n      ctx.stroke();\r\n    };\r\n\r\n    var drawCrossOver = function (x, y, w, h) {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = 2;\r\n      ctx.moveTo(x, y);\r\n      ctx.lineTo(x + w, y + h);\r\n      ctx.moveTo(x, y + h);\r\n      ctx.lineTo(x + w, y);\r\n      ctx.stroke();\r\n    };\r\n\r\n    var fillText = function (x, y, legendItem, textWidth) {\r\n      var halfFontSize = fontSize / 2;\r\n      var xLeft = boxWidth + halfFontSize + x;\r\n      var yMiddle = y + halfFontSize;\r\n\r\n      if (helpers.isArray(legendItem.text)) {\r\n        helpers.each(legendItem.text, function (textLine, index) {\r\n          var lineOffset = index * fontSize;\r\n          ctx.fillText(textLine, xLeft, yMiddle + lineOffset);\r\n        });\r\n      } else {\r\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\r\n      }\r\n\r\n      if (legendItem.hidden) {\r\n        if (helpers.isArray(legendItem.text)) {\r\n          drawCrossOver(xLeft, yMiddle, textWidth, (legendItem.text.length - 1) * (fontSize - 1));\r\n        } else {\r\n          drawStrikeThrough(xLeft, yMiddle, textWidth);\r\n        }\r\n      }\r\n    };\r\n\r\n    var alignmentOffset = function (dimension, blockSize) {\r\n      switch (opts.align) {\r\n        case 'start':\r\n          return labelOpts.padding;\r\n        case 'end':\r\n          return dimension - blockSize;\r\n        default: // center\r\n          return (dimension - blockSize + labelOpts.padding) / 2;\r\n      }\r\n    };\r\n\r\n    // Horizontal\r\n    var isHorizontal = me.isHorizontal();\r\n    if (isHorizontal) {\r\n      cursor = {\r\n        x: me.left + alignmentOffset(legendWidth, lineWidths[0]),\r\n        y: me.top + labelOpts.padding,\r\n        line: 0\r\n      };\r\n    } else {\r\n      cursor = {\r\n        x: me.left + labelOpts.padding,\r\n        y: me.top + alignmentOffset(legendHeight, columnHeights[0]),\r\n        line: 0\r\n      };\r\n    }\r\n\r\n    helpers.each(me.legendItems, function (legendItem, i) {\r\n      var textWidth, height, boxTopOffset;\r\n\r\n      if (legendItem.lineOrColumnIndex > cursor.line) {\r\n        if (isHorizontal) {\r\n          cursor.y += lineHeights[cursor.line];\r\n          cursor.line = legendItem.lineOrColumnIndex;\r\n          cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);\r\n        } else {\r\n          cursor.x += columnWidths[cursor.line] + labelOpts.padding;\r\n          cursor.line = legendItem.lineOrColumnIndex;\r\n          cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);\r\n        }\r\n      }\r\n\r\n      if (helpers.isArray(legendItem.text)) {\r\n        textWidth = legendItem.text.map(function (textLine) {\r\n          return ctx.measureText(textLine).width;\r\n        }).reduce(function (acc, v) {\r\n          return v > acc ? v : acc;\r\n        }, 0);\r\n        boxTopOffset = fontSize / 2 * (legendItem.text.length - 1);\r\n        height = fontSize * legendItem.text.length;\r\n      } else {\r\n        textWidth = ctx.measureText(legendItem.text).width;\r\n        boxTopOffset = 0;\r\n        height = fontSize;\r\n      }\r\n\r\n      var width = boxWidth + (fontSize / 2) + textWidth;\r\n      var x = cursor.x;\r\n      var y = cursor.y;\r\n\r\n      var topOffset = isHorizontal ? Math.trunc((lineHeights[cursor.line] - hitboxes[i].height) / 2) : 0;\r\n\r\n      drawLegendBox(x, y + boxTopOffset + topOffset, legendItem);\r\n\r\n      hitboxes[i].left = x;\r\n      hitboxes[i].top = y;\r\n\r\n      // Fill the actual label\r\n      fillText(x, y + topOffset, legendItem, textWidth);\r\n\r\n      if (isHorizontal) {\r\n        cursor.x += width + labelOpts.padding;\r\n      } else {\r\n        cursor.y += height + labelOpts.padding;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function monkeyPatchChartJsLegend() {\r\n  const plugins = Chart.plugins.getAll();\r\n  const legend = plugins.filter(p => p.id === 'legend')[0];\r\n  legend._element.prototype.fit = fit;\r\n  legend._element.prototype.draw = draw;\r\n}\r\n","// tslint:disable:variable-name\r\n// tslint:disable:no-var-keyword\r\n// tslint:disable:prefer-const\r\n// tslint:disable:only-arrow-functions\r\n// tslint:disable:one-variable-per-declaration\r\n// tslint:disable:object-literal-shorthand\r\n// tslint:disable:space-before-function-paren\r\n\r\ndeclare class Chart {\r\n  static readonly Chart: typeof Chart;\r\n  static readonly Tooltip: any;\r\n  static readonly helpers: any;\r\n  static readonly defaults: any;\r\n  static readonly plugins: any;\r\n}\r\n\r\nconst helpers = Chart.helpers;\r\n\r\nfunction getAlignedX(vm, align) {\r\n  return align === 'center'\r\n    ? vm.x + vm.width / 2\r\n    : align === 'right'\r\n      ? vm.x + vm.width - vm.xPadding\r\n      : vm.x + vm.xPadding;\r\n}\r\n\r\nfunction drawBody(pt, vm, ctx) {\r\n  var bodyFontSize = vm.bodyFontSize;\r\n  var bodySpacing = vm.bodySpacing;\r\n  var bodyAlign = vm._bodyAlign;\r\n  var body = vm.body;\r\n  var drawColorBoxes = vm.displayColors;\r\n  var labelColors = vm.labelColors;\r\n  var xLinePadding = 0;\r\n  var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\r\n  var textColor;\r\n\r\n  ctx.textAlign = bodyAlign;\r\n  ctx.textBaseline = 'top';\r\n  ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n  pt.x = getAlignedX(vm, bodyAlign);\r\n\r\n  // Before Body\r\n  var fillLineOfText = function (line) {\r\n    ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n    pt.y += bodyFontSize + bodySpacing;\r\n  };\r\n\r\n  // Before body lines\r\n  ctx.fillStyle = vm.bodyFontColor;\r\n  helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n  xLinePadding = drawColorBoxes && bodyAlign !== 'right'\r\n    ? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\r\n    : 0;\r\n\r\n  // Draw body lines now\r\n  helpers.each(body, function (bodyItem, i) {\r\n    textColor = vm.labelTextColors[i];\r\n    ctx.fillStyle = textColor;\r\n    helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n    // Draw Legend-like boxes if needed\r\n    if (drawColorBoxes) {\r\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n      ctx.fillStyle = vm.legendColorBackground;\r\n      ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n      // Border\r\n      ctx.lineWidth = 1;\r\n      ctx.strokeStyle = labelColors[i].borderColor;\r\n      ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n      // Inner square\r\n      ctx.fillStyle = labelColors[i].backgroundColor;\r\n      ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n      ctx.fillStyle = textColor;\r\n    }\r\n\r\n    helpers.each(bodyItem.lines, fillLineOfText);\r\n\r\n    helpers.each(bodyItem.after, fillLineOfText);\r\n  });\r\n\r\n  // Reset back to 0 for after body\r\n  xLinePadding = 0;\r\n\r\n  // After body lines\r\n  helpers.each(vm.afterBody, fillLineOfText);\r\n  pt.y -= bodySpacing; // Remove last body spacing\r\n}\r\n\r\nexport function monkeyPatchChartJsTooltip() {\r\n  Chart.Tooltip.prototype.drawBody = drawBody;\r\n}\r\n"],"names":["chartJs.Chart","_.cloneDeep","helpers"],"mappings":"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"}
